{"topic": 8546, "ast_fol": [{"topic": 8546, "expression": "( FORALL x ( vehicle ( x ) AND travel_land ( x ) AND travel_water ( x ) IMPLIES amphibious_vehicle ( x ) ) )", "tokens": [["(", 0], ["FORALL", 1], ["x", 2], ["(", 3], ["vehicle", 4], ["(", 5], ["x", 6], [")", 7], ["AND", 8], ["travel_land", 9], ["(", 10], ["x", 11], [")", 12], ["AND", 13], ["travel_water", 14], ["(", 15], ["x", 16], [")", 17], ["IMPLIES", 18], ["amphibious_vehicle", 19], ["(", 20], ["x", 21], [")", 22], [")", 23], [")", 24]], "type_paths": [{"current_id": 1, "current_node": "FORALL", "paths": ["FORALL"], "path_ids": [1]}, {"current_id": 2, "current_node": "x", "paths": ["FORALL", "Variable"], "path_ids": [1, 2]}, {"current_id": 4, "current_node": "vehicle", "paths": ["FORALL", "IMPLIES", "AND", "AND", "Predicate"], "path_ids": [1, 18, 13, 8, 4]}, {"current_id": 6, "current_node": "x", "paths": ["FORALL", "IMPLIES", "AND", "AND", "Predicate", "Variable"], "path_ids": [1, 18, 13, 8, 4, 6]}, {"current_id": 8, "current_node": "AND", "paths": ["FORALL", "IMPLIES", "AND", "AND"], "path_ids": [1, 18, 13, 8]}, {"current_id": 9, "current_node": "travel_land", "paths": ["FORALL", "IMPLIES", "AND", "AND", "Predicate"], "path_ids": [1, 18, 13, 8, 9]}, {"current_id": 11, "current_node": "x", "paths": ["FORALL", "IMPLIES", "AND", "AND", "Predicate", "Variable"], "path_ids": [1, 18, 13, 8, 9, 11]}, {"current_id": 13, "current_node": "AND", "paths": ["FORALL", "IMPLIES", "AND"], "path_ids": [1, 18, 13]}, {"current_id": 14, "current_node": "travel_water", "paths": ["FORALL", "IMPLIES", "AND", "Predicate"], "path_ids": [1, 18, 13, 14]}, {"current_id": 16, "current_node": "x", "paths": ["FORALL", "IMPLIES", "AND", "Predicate", "Variable"], "path_ids": [1, 18, 13, 14, 16]}, {"current_id": 18, "current_node": "IMPLIES", "paths": ["FORALL", "IMPLIES"], "path_ids": [1, 18]}, {"current_id": 19, "current_node": "amphibious_vehicle", "paths": ["FORALL", "IMPLIES", "Predicate"], "path_ids": [1, 18, 19]}, {"current_id": 21, "current_node": "x", "paths": ["FORALL", "IMPLIES", "Predicate", "Variable"], "path_ids": [1, 18, 19, 21]}], "value_paths": [{"current_id": 1, "current_node": "FORALL", "paths": ["FORALL"], "path_ids": [1]}, {"current_id": 2, "current_node": "x", "paths": ["FORALL", "x"], "path_ids": [1, 2]}, {"current_id": 4, "current_node": "vehicle", "paths": ["FORALL", "IMPLIES", "AND", "AND", "vehicle"], "path_ids": [1, 18, 13, 8, 4]}, {"current_id": 6, "current_node": "x", "paths": ["FORALL", "IMPLIES", "AND", "AND", "vehicle", "x"], "path_ids": [1, 18, 13, 8, 4, 6]}, {"current_id": 8, "current_node": "AND", "paths": ["FORALL", "IMPLIES", "AND", "AND"], "path_ids": [1, 18, 13, 8]}, {"current_id": 9, "current_node": "travel_land", "paths": ["FORALL", "IMPLIES", "AND", "AND", "travel_land"], "path_ids": [1, 18, 13, 8, 9]}, {"current_id": 11, "current_node": "x", "paths": ["FORALL", "IMPLIES", "AND", "AND", "travel_land", "x"], "path_ids": [1, 18, 13, 8, 9, 11]}, {"current_id": 13, "current_node": "AND", "paths": ["FORALL", "IMPLIES", "AND"], "path_ids": [1, 18, 13]}, {"current_id": 14, "current_node": "travel_water", "paths": ["FORALL", "IMPLIES", "AND", "travel_water"], "path_ids": [1, 18, 13, 14]}, {"current_id": 16, "current_node": "x", "paths": ["FORALL", "IMPLIES", "AND", "travel_water", "x"], "path_ids": [1, 18, 13, 14, 16]}, {"current_id": 18, "current_node": "IMPLIES", "paths": ["FORALL", "IMPLIES"], "path_ids": [1, 18]}, {"current_id": 19, "current_node": "amphibious_vehicle", "paths": ["FORALL", "IMPLIES", "amphibious_vehicle"], "path_ids": [1, 18, 19]}, {"current_id": 21, "current_node": "x", "paths": ["FORALL", "IMPLIES", "amphibious_vehicle", "x"], "path_ids": [1, 18, 19, 21]}]}], "ast_nl": [{"topic": 8546, "expression": "An amphibious vehicle is define as a vehicle capable of travel on both land and water", "tokens": [["define", 0], ["vehicle", 1], ["amphibious", 2], ["vehicle", 3], ["capable", 4], ["travel", 5], ["and", 6], ["land", 7], ["water", 8]], "value_paths": [{"current_id": 0, "current_node": "define", "paths": ["define"], "path_ids": [0]}, {"current_id": 1, "current_node": "vehicle", "paths": ["define", "vehicle"], "path_ids": [0, 1]}, {"current_id": 2, "current_node": "amphibious", "paths": ["define", "vehicle", "amphibious"], "path_ids": [0, 1, 2]}, {"current_id": 3, "current_node": "vehicle", "paths": ["define", "vehicle"], "path_ids": [0, 1]}, {"current_id": 4, "current_node": "capable", "paths": ["define", "vehicle", "capable"], "path_ids": [0, 1, 4]}, {"current_id": 5, "current_node": "travel", "paths": ["define", "vehicle", "travel"], "path_ids": [0, 1, 5]}, {"current_id": 6, "current_node": "and", "paths": ["define", "vehicle", "travel", "and"], "path_ids": [0, 1, 5, 6]}, {"current_id": 7, "current_node": "land", "paths": ["define", "vehicle", "travel", "and", "land"], "path_ids": [0, 1, 5, 6, 7]}, {"current_id": 8, "current_node": "water", "paths": ["define", "vehicle", "travel", "and", "water"], "path_ids": [0, 1, 5, 6, 8]}]}, {"topic": 8546, "expression": "Therefore , if a vehicle can travel on land and water , it is an amphibious vehicle", "tokens": [["infer", 0], ["vehicle", 1], ["possible", 2], ["travel", 3], ["vehicle", 4], ["and", 5], ["land", 6], ["water", 7], ["amphibious", 8]], "value_paths": [{"current_id": 0, "current_node": "infer", "paths": ["infer"], "path_ids": [0]}, {"current_id": 1, "current_node": "vehicle", "paths": ["infer", "vehicle"], "path_ids": [0, 1]}, {"current_id": 2, "current_node": "possible", "paths": ["infer", "vehicle", "possible"], "path_ids": [0, 1, 2]}, {"current_id": 3, "current_node": "travel", "paths": ["infer", "vehicle", "possible", "travel"], "path_ids": [0, 1, 2, 3]}, {"current_id": 4, "current_node": "vehicle", "paths": ["infer", "vehicle"], "path_ids": [0, 1]}, {"current_id": 5, "current_node": "and", "paths": ["infer", "vehicle", "possible", "travel", "and"], "path_ids": [0, 1, 2, 3, 5]}, {"current_id": 6, "current_node": "land", "paths": ["infer", "vehicle", "possible", "travel", "and", "land"], "path_ids": [0, 1, 2, 3, 5, 6]}, {"current_id": 7, "current_node": "water", "paths": ["infer", "vehicle", "possible", "travel", "and", "water"], "path_ids": [0, 1, 2, 3, 5, 7]}, {"current_id": 8, "current_node": "amphibious", "paths": ["infer", "vehicle", "amphibious"], "path_ids": [0, 1, 8]}]}], "text_tokens": [{"topic": 8546, "text": "An amphibious vehicle is define as a vehicle capable of travel on both land and water . Therefore , if a vehicle can travel on land and water , it is an amphibious vehicle <extra_id_0> ( FORALL x ( vehicle ( x ) AND travel_land ( x ) AND travel_water ( x ) IMPLIES amphibious_vehicle ( x ) ) )", "tokens": [389, 11483, 13506, 1162, 1689, 19, 6634, 38, 3, 9, 1689, 3919, 13, 1111, 30, 321, 1322, 11, 387, 3, 5, 4063, 3, 6, 3, 99, 3, 9, 1689, 54, 1111, 30, 1322, 11, 387, 3, 6, 34, 19, 46, 11483, 13506, 1162, 1689, 3, 32099, 41, 5652, 12126, 3, 226, 41, 1689, 41, 3, 226, 3, 61, 3430, 1111, 834, 40, 232, 41, 3, 226, 3, 61, 3430, 1111, 834, 3552, 41, 3, 226, 3, 61, 3, 25657, 434, 11973, 11483, 13506, 1162, 834, 162, 107, 23, 2482, 41, 3, 226, 3, 61, 3, 61, 3, 61], "context_mask": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1], "target_mask": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0], "token_mask": [[321], [3, 9], [3, 61], [3, 25657, 434, 11973]], "word_mask": [["both"], ["a"], [")"], ["IMPLIES"]], "context_mask_block": [[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], "target_mask_block": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]}]}
{"topic": 8451, "ast_fol": [{"topic": 8451, "expression": "( FORALL x ( guide_advise_invest_matter ( x ) IMPLIES financial_advise ( x ) ) )", "tokens": [["(", 0], ["FORALL", 1], ["x", 2], ["(", 3], ["guide_advise_invest_matter", 4], ["(", 5], ["x", 6], [")", 7], ["IMPLIES", 8], ["financial_advise", 9], ["(", 10], ["x", 11], [")", 12], [")", 13], [")", 14]], "type_paths": [{"current_id": 1, "current_node": "FORALL", "paths": ["FORALL"], "path_ids": [1]}, {"current_id": 2, "current_node": "x", "paths": ["FORALL", "Variable"], "path_ids": [1, 2]}, {"current_id": 4, "current_node": "guide_advise_invest_matter", "paths": ["FORALL", "IMPLIES", "Predicate"], "path_ids": [1, 8, 4]}, {"current_id": 6, "current_node": "x", "paths": ["FORALL", "IMPLIES", "Predicate", "Variable"], "path_ids": [1, 8, 4, 6]}, {"current_id": 8, "current_node": "IMPLIES", "paths": ["FORALL", "IMPLIES"], "path_ids": [1, 8]}, {"current_id": 9, "current_node": "financial_advise", "paths": ["FORALL", "IMPLIES", "Predicate"], "path_ids": [1, 8, 9]}, {"current_id": 11, "current_node": "x", "paths": ["FORALL", "IMPLIES", "Predicate", "Variable"], "path_ids": [1, 8, 9, 11]}], "value_paths": [{"current_id": 1, "current_node": "FORALL", "paths": ["FORALL"], "path_ids": [1]}, {"current_id": 2, "current_node": "x", "paths": ["FORALL", "x"], "path_ids": [1, 2]}, {"current_id": 4, "current_node": "guide_advise_invest_matter", "paths": ["FORALL", "IMPLIES", "guide_advise_invest_matter"], "path_ids": [1, 8, 4]}, {"current_id": 6, "current_node": "x", "paths": ["FORALL", "IMPLIES", "guide_advise_invest_matter", "x"], "path_ids": [1, 8, 4, 6]}, {"current_id": 8, "current_node": "IMPLIES", "paths": ["FORALL", "IMPLIES"], "path_ids": [1, 8]}, {"current_id": 9, "current_node": "financial_advise", "paths": ["FORALL", "IMPLIES", "financial_advise"], "path_ids": [1, 8, 9]}, {"current_id": 11, "current_node": "x", "paths": ["FORALL", "IMPLIES", "financial_advise", "x"], "path_ids": [1, 8, 9, 11]}]}], "ast_nl": [{"topic": 8451, "expression": "A person who provides guide and advise to client on invest matter is call a financial advise", "tokens": [["call", 0], ["person", 1], ["guide", 2], ["person", 3], ["have", 4], ["client", 5], ["matter", 6], ["invest", 7], ["advise", 8], ["person", 9], ["advise", 10], ["financial", 11]], "value_paths": [{"current_id": 0, "current_node": "call", "paths": ["call"], "path_ids": [0]}, {"current_id": 1, "current_node": "person", "paths": ["call", "person"], "path_ids": [0, 1]}, {"current_id": 2, "current_node": "guide", "paths": ["call", "person", "guide"], "path_ids": [0, 1, 2]}, {"current_id": 3, "current_node": "person", "paths": ["call", "person"], "path_ids": [0, 1]}, {"current_id": 4, "current_node": "have", "paths": ["call", "person", "have"], "path_ids": [0, 1, 4]}, {"current_id": 5, "current_node": "client", "paths": ["call", "person", "have", "client"], "path_ids": [0, 1, 4, 5]}, {"current_id": 6, "current_node": "matter", "paths": ["call", "person", "guide", "matter"], "path_ids": [0, 1, 2, 6]}, {"current_id": 7, "current_node": "invest", "paths": ["call", "person", "guide", "matter", "invest"], "path_ids": [0, 1, 2, 6, 7]}, {"current_id": 8, "current_node": "advise", "paths": ["call", "person", "advise"], "path_ids": [0, 1, 8]}, {"current_id": 9, "current_node": "person", "paths": ["call", "person"], "path_ids": [0, 1]}, {"current_id": 10, "current_node": "advise", "paths": ["call", "person", "advise"], "path_ids": [0, 1, 8]}, {"current_id": 11, "current_node": "financial", "paths": ["call", "person", "financial"], "path_ids": [0, 1, 11]}]}], "text_tokens": [{"topic": 8451, "text": "A person who provides guide and advise to client on invest matter is call a financial advise <extra_id_0> ( FORALL x ( guide_advise_invest_matter ( x ) IMPLIES financial_advise ( x ) ) )", "tokens": [71, 568, 113, 795, 1539, 11, 7786, 12, 1188, 30, 4032, 1052, 19, 580, 3, 9, 981, 7786, 3, 32099, 41, 5652, 12126, 3, 226, 41, 1539, 834, 9, 26, 3466, 15, 834, 15601, 834, 51, 12828, 41, 3, 226, 3, 61, 3, 25657, 434, 11973, 981, 834, 9, 26, 3466, 15, 41, 3, 226, 3, 61, 3, 61, 3, 61], "context_mask": [1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], "target_mask": [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "token_mask": [[1539], [4032], [3, 226], [5652, 12126]], "word_mask": [["guide"], ["invest"], ["x"], ["FORALL"]], "context_mask_block": [[1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], "target_mask_block": [[0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]}]}
{"topic": 8452, 

"ast_fol": [{"topic": 8452, "expression": "( FORALL x ( human ( x ) IMPLIES need_water_survive ( x ) ) )", "tokens": [["(", 0], ["FORALL", 1], ["x", 2], ["(", 3], ["human", 4], ["(", 5], ["x", 6], [")", 7], ["IMPLIES", 8], ["need_water_survive", 9], ["(", 10], ["x", 11], [")", 12], [")", 13], [")", 14]], "type_paths": [{"current_id": 1, "current_node": "FORALL", "paths": ["FORALL"], "path_ids": [1]}, {"current_id": 2, "current_node": "x", "paths": ["FORALL", "Variable"], "path_ids": [1, 2]}, {"current_id": 4, "current_node": "human", "paths": ["FORALL", "IMPLIES", "Predicate"], "path_ids": [1, 8, 4]}, {"current_id": 6, "current_node": "x", "paths": ["FORALL", "IMPLIES", "Predicate", "Variable"], "path_ids": [1, 8, 4, 6]}, {"current_id": 8, "current_node": "IMPLIES", "paths": ["FORALL", "IMPLIES"], "path_ids": [1, 8]}, {"current_id": 9, "current_node": "need_water_survive", "paths": ["FORALL", "IMPLIES", "Predicate"], "path_ids": [1, 8, 9]}, {"current_id": 11, "current_node": "x", "paths": ["FORALL", "IMPLIES", "Predicate", "Variable"], "path_ids": [1, 8, 9, 11]}], "value_paths": [{"current_id": 1, "current_node": "FORALL", "paths": ["FORALL"], "path_ids": [1]}, {"current_id": 2, "current_node": "x", "paths": ["FORALL", "x"], "path_ids": [1, 2]}, {"current_id": 4, "current_node": "human", "paths": ["FORALL", "IMPLIES", "human"], "path_ids": [1, 8, 4]}, {"current_id": 6, "current_node": "x", "paths": ["FORALL", "IMPLIES", "human", "x"], "path_ids": [1, 8, 4, 6]}, {"current_id": 8, "current_node": "IMPLIES", "paths": ["FORALL", "IMPLIES"], "path_ids": [1, 8]}, {"current_id": 9, "current_node": "need_water_survive", "paths": ["FORALL", "IMPLIES", "need_water_survive"], "path_ids": [1, 8, 9]}, {"current_id": 11, "current_node": "x", "paths": ["FORALL", "IMPLIES", "need_water_survive", "x"], "path_ids": [1, 8, 9, 11]}]}], 

"ast_nl": [{"topic": 8452, "expression": "All human need water to survive", "tokens": [["need", 0], ["survive", 1], ["human", 2], ["all", 3], ["water", 4]], "value_paths": [{"current_id": 0, "current_node": "need", "paths": ["need"], "path_ids": [0]}, {"current_id": 1, "current_node": "survive", "paths": ["need", "survive"], "path_ids": [0, 1]}, {"current_id": 2, "current_node": "human", "paths": ["need", "human"], "path_ids": [0, 2]}, {"current_id": 3, "current_node": "all", "paths": ["need", "human", "all"], "path_ids": [0, 2, 3]}, {"current_id": 4, "current_node": "water", "paths": ["need", "water"], "path_ids": [0, 4]}]}], 

"text_tokens": [{"topic": 8452, "text": "All human need water to survive <extra_id_0> ( FORALL x ( human ( x ) IMPLIES need_water_survive ( x ) ) )", "tokens": [432, 936, 174, 387, 12, 7905, 3, 32099, 41, 5652, 12126, 3, 226, 41, 936, 41, 3, 226, 3, 61, 3, 25657, 434, 11973, 174, 834, 3552, 834, 3042, 7003, 15, 41, 3, 226, 3, 61, 3, 61, 3, 61], "context_mask": [1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1], "target_mask": [0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0], "token_mask": [[7905], [387], [3, 226], [3, 61]], "word_mask": [["survive"], ["water"], ["x"], [")"]], "context_mask_block": [[1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1]], "target_mask_block": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0]]}]}
